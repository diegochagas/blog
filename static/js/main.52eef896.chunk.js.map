{"version":3,"sources":["services/api.js","store/modules/user/actions.js","components/UserHeader.js","components/PostList.js","store/modules/posts/actions.js","store/index.js","store/createStore.js","store/modules/rootReducer.js","store/modules/posts/reducer.js","store/modules/user/reducer.js","index.js","App.js"],"names":["api","axios","create","baseURL","fetchUser","id","dispatch","a","async","get","response","type","payload","data","UserHeader","user","this","props","className","name","React","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUsers","posts","map","post","key","title","body","renderList","getState","_","chain","uniq","forEach","value","store","reducers","middlewares","enhancer","applyMiddleware","createStore","combineReducers","action","thunk","ReactDOM","render","document","getElementById"],"mappings":"iVAMeA,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,yCCCEC,EAAY,SAAAC,GAAE,OAAI,SAAMC,GAAN,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACNP,EAAIS,IAAJ,iBAAkBJ,KADZ,OACvBK,EADuB,OAE7BJ,EAAS,CAAEK,KAJa,aAIKC,QAASF,EAASG,OAFlB,uCCDzBC,G,uLACK,IACCC,EAASC,KAAKC,MAAdF,KACR,OAAIA,EAIF,yBAAKG,UAAU,eACZH,EAAKI,MAJD,S,GAJYC,IAAMC,YAkBhBC,eAJS,SAACC,EAAOC,GAC9B,MAAO,CAAET,KAAMQ,EAAME,MAAMC,MAAK,SAAAX,GAAI,OAAIA,EAAKV,KAAOmB,EAASG,aAGhDL,CAAyBR,GCflCc,E,4LAEFZ,KAAKC,MAAMY,uB,mCAIX,OAAOb,KAAKC,MAAMa,MAAMC,KAAI,SAAAC,GAC1B,OACE,wBAAId,UAAU,iBAAiBe,IAAKD,EAAK3B,IACvC,uBAAGa,UAAU,gBACb,yBAAKA,UAAU,oBACb,4BAAKc,EAAKE,OACV,2BAAIF,EAAKG,MACT,kBAAC,EAAD,CAAYR,OAAQK,EAAKL,gB,+BAQjC,OAAO,wBAAIT,UAAU,aAAaF,KAAKoB,kB,GArBpBf,aA6BRC,eAJS,SAAAC,GACtB,MAAO,CAAEO,MAAOP,EAAMO,SAGgB,CAAED,mBCvBR,kBAAM,SAAOvB,EAAU+B,GAAjB,SAAA9B,EAAAC,OAAA,kEAAAD,EAAA,MAChCD,GANwB,SAAMA,GAAN,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACPP,EAAIS,IAAJ,WADO,OACxBC,EADwB,OAE9BJ,EAAS,CAAEK,KAJc,cAIKC,QAASF,EAASG,OAFlB,yCAKQ,OAEtCyB,IAAEC,MAAMF,IAAWP,OAChBC,IAAI,UACJS,OACAC,SAAQ,SAAApC,GAAE,OAAIC,EAASF,EAAUC,OACjCqC,QANmC,wCDuBzBpB,CAAiDM,G,uBE3B1De,ECNS,SAACC,EAAUC,GACxB,IAAMC,EAAWC,IAAe,WAAf,cAAmBF,IAEpC,OAAOG,YAAYJ,EAAUE,GDGjBE,CEJCC,YAAgB,CAC7BnB,MCHa,WAAyB,IAAxBP,EAAuB,uDAAf,GAAI2B,EAAW,uCACrC,OAAQA,EAAOvC,MACb,IJCuB,cIArB,OAAOuC,EAAOtC,QAChB,QACE,OAAOW,IDDXE,MEJa,WAAyB,IAAxBF,EAAuB,uDAAf,GAAI2B,EAAW,uCACrC,OAAQA,EAAOvC,MACb,IRFsB,aQGpB,MAAM,GAAN,mBAAWY,GAAX,CAAkB2B,EAAOtC,UAC3B,QACE,OAAOW,MJDO,CAAC4B,MKDrBC,IAASC,OAAO,mBCGD,WACb,OACE,kBAAC,IAAD,CAAUV,MAAOA,GACf,yBAAKzB,UAAU,OACb,kBAAC,EAAD,UDPQ,MAASoC,SAASC,eAAe,W","file":"static/js/main.52eef896.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://jsonplaceholder.typicode.com',\r\n});\r\n\r\nexport default api;\r\n","import api from '../../../services/api';\r\n\r\nexport const FETCH_USER = 'FETCH_USER';\r\n\r\nexport const fetchUser = id => async dispatch => {\r\n  const response = await api.get(`/users/${id}`);\r\n  dispatch({ type: FETCH_USER, payload: response.data });\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass UserHeader extends React.Component {\r\n  render(){\r\n    const { user } = this.props;\r\n    if(!user) {\r\n      return null;\r\n    }\r\n    return(\r\n      <div className=\"user-header\">\r\n        {user.name}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { user: state.users.find(user => user.id === ownProps.userId) };\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserHeader);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPostsAndUsers } from '../store/modules/posts/actions';\r\nimport './PostList.css';\r\nimport UserHeader from './UserHeader';\r\n\r\nclass PostList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchPostsAndUsers();\r\n  }\r\n\r\n  renderList() {\r\n    return this.props.posts.map(post => {\r\n      return (\r\n        <li className=\"post-list-item\" key={post.id}>\r\n          <i className=\"fas fa-user\" />\r\n          <div className=\"post-description\">\r\n            <h2>{post.title}</h2>\r\n            <p>{post.body}</p>\r\n            <UserHeader userId={post.userId} />\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <ul className=\"post-list\">{this.renderList()}</ul>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { posts: state.posts };\r\n};\r\n\r\nexport default connect(mapStateToProps, { fetchPostsAndUsers })(PostList);\r\n","import _ from 'lodash';\r\n\r\nimport { fetchUser } from '../user/actions';\r\nimport api from '../../../services/api';\r\n\r\nexport const FETCH_POSTS = 'FETCH_POSTS';\r\n\r\nexport const fetchPosts = () => async dispatch => {\r\n  const response = await api.get(`/posts`);\r\n  dispatch({ type: FETCH_POSTS, payload: response.data });\r\n};\r\n\r\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\r\n  await dispatch(fetchPosts());\r\n  _.chain(getState().posts)\r\n    .map('userId')\r\n    .uniq()\r\n    .forEach(id => dispatch(fetchUser(id)))\r\n    .value();\r\n};\r\n","import thunk from 'redux-thunk';\r\n\r\nimport createStore from './createStore';\r\n\r\nimport rootReducer from './modules/rootReducer';\r\n\r\nconst middlewares = [thunk];\r\n\r\nconst store = createStore(rootReducer, middlewares);\r\n\r\nexport { store };\r\n","import { createStore, applyMiddleware } from 'redux';\r\n\r\nexport default (reducers, middlewares) => {\r\n  const enhancer = applyMiddleware(...middlewares);\r\n\r\n  return createStore(reducers, enhancer);\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport postsReducer from './posts/reducer';\r\nimport usersReducer from './user/reducer';\r\n\r\nexport default combineReducers({\r\n  posts: postsReducer,\r\n  users: usersReducer,\r\n});\r\n","import { FETCH_POSTS } from './actions';\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_POSTS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { FETCH_USER } from './actions';\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_USER:\r\n      return [...state, action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './App.css';\r\nimport PostList from './components/PostList';\r\n\r\nimport { store } from './store';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"App\">\r\n        <PostList />\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n"],"sourceRoot":""}