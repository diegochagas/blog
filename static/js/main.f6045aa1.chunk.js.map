{"version":3,"sources":["assets/logo.svg","styles/global.js","components/PostList/styles.js","components/PostList/UserHeader/index.js","components/PostList/index.js","services/api.js","store/modules/user/actions.js","store/modules/posts/actions.js","components/Header/styles.js","components/Header/index.js","store/index.js","store/createStore.js","store/modules/rootReducer.js","store/modules/posts/reducer.js","store/modules/user/reducer.js","index.js","App.js"],"names":["module","exports","createGlobalStyle","Container","styled","ul","UserHeader","userId","user","useSelector","state","users","find","id","className","name","PostList","hideBtn","posts","length","map","post","key","title","body","api","axios","create","baseURL","fetchUser","dispatch","a","async","get","response","type","payload","data","fetchPostsAndUsers","getState","_","chain","uniq","forEach","value","header","Header","setHideBtn","useDispatch","data-testid","src","logo","alt","data-test","onClick","store","reducers","middlewares","enhancer","applyMiddleware","createStore","combineReducers","action","thunk","ReactDOM","render","useState","document","getElementById"],"mappings":"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","file":"static/js/main.f6045aa1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { createGlobalStyle } from 'styled-components';\n\nimport './fonts.css';\n\nexport default createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n      monospace;\n  }\n\n  #root {\n    margin: 0 auto;\n    max-width: 1024px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.ul`\n  margin: 20px;\n  padding: 0;\n\n  .post-list-item {\n    border: 1px solid black;\n    display: flex;\n    align-items: center;\n    list-style: none;\n    margin: 10px 0;\n    padding: 10px;\n  }\n\n  .post-list-item .icon-user {\n    font-size: 50px;\n  }\n\n  .post-description {\n    margin-left: 20px;\n  }\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\n// import { Container } from './styles';\n\nexport default function UserHeader({ userId }) {\n  const user = useSelector(state =>\n    state.users.find(user => user.id === userId)\n  );\n\n  if (!user) {\n    return null;\n  }\n\n  return <div className=\"user-header\">{user.name}</div>;\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Container } from './styles';\nimport UserHeader from './UserHeader';\n\nexport default function PostList({ hideBtn }) {\n  const posts = useSelector(state => state.posts);\n\n  return (\n    <Container>\n      {posts.length === 0 && hideBtn ? <progress /> : null}\n\n      {posts.map(post => {\n        return (\n          <li className=\"post-list-item\" key={post.id}>\n            <i className=\"icon-user\" />\n\n            <div className=\"post-description\">\n              <h2>{post.title}</h2>\n\n              <p>{post.body}</p>\n\n              <UserHeader userId={post.userId} />\n            </div>\n          </li>\n        );\n      })}\n    </Container>\n  );\n}\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://jsonplaceholder.typicode.com',\n});\n\nexport default api;\n","import api from '../../../services/api';\n\nexport const FETCH_USER = 'FETCH_USER';\n\nexport const fetchUser = id => async dispatch => {\n  const response = await api.get(`/users/${id}`);\n\n  dispatch({ type: FETCH_USER, payload: response.data });\n};\n","import _ from 'lodash';\n\nimport { fetchUser } from '../user/actions';\nimport api from '../../../services/api';\n\nexport const FETCH_POSTS = 'FETCH_POSTS';\n\nexport const fetchPosts = () => async dispatch => {\n  const response = await api.get(`/posts`);\n\n  dispatch({ type: FETCH_POSTS, payload: response.data });\n};\n\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\n  await dispatch(fetchPosts());\n  _.chain(getState().posts)\n    .map('userId')\n    .uniq()\n    .forEach(id => dispatch(fetchUser(id)))\n    .value();\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.header`\n  display: block;\n  max-width: 980px;\n  margin: 20px auto;\n\n  img {\n    height: 70px;\n  }\n\n  button {\n    background-color: #2196f3;\n    border: 1px solid lightblue;\n    border-radius: 10px;\n    color: white;\n    font-weight: bold;\n    padding: 10px 20px;\n  }\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchPostsAndUsers } from '~/store/modules/posts/actions';\nimport { Container } from './styles';\nimport logo from '~/assets/logo.svg';\n\nexport default function Header({ hideBtn, setHideBtn }) {\n  const dispatch = useDispatch();\n\n  function handleClick() {\n    dispatch(fetchPostsAndUsers());\n\n    setHideBtn(!hideBtn);\n  }\n\n  return (\n    <Container data-testid=\"header\">\n      <img src={logo} className=\"App-logo\" alt=\"logo\" data-testid=\"logo\" />\n\n      <h1>Posts</h1>\n\n      <div className=\"head-line\" data-test=\"headline\">\n        <p data-test=\"desc\">Click the button to render posts!</p>\n      </div>\n\n      {!hideBtn && (\n        <button type=\"button\" onClick={handleClick}>\n          Get posts\n        </button>\n      )}\n    </Container>\n  );\n}\n","import thunk from 'redux-thunk';\n\nimport createStore from './createStore';\n\nimport rootReducer from './modules/rootReducer';\n\nexport const middlewares = [thunk];\n\nconst store = createStore(rootReducer, middlewares);\n\nexport { store };\n","import { createStore, applyMiddleware } from 'redux';\n\nexport default (reducers, middlewares) => {\n  const enhancer = applyMiddleware(...middlewares);\n\n  return createStore(reducers, enhancer);\n};\n","import { combineReducers } from 'redux';\nimport postsReducer from './posts/reducer';\nimport usersReducer from './user/reducer';\n\nexport default combineReducers({\n  posts: postsReducer,\n  users: usersReducer,\n});\n","import { FETCH_POSTS } from './actions';\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case FETCH_POSTS:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import { FETCH_USER } from './actions';\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case FETCH_USER:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React, { useState } from 'react';\nimport { Provider } from 'react-redux';\n\nimport GlobalStyle from './styles/global';\nimport PostList from './components/PostList';\nimport Header from './components/Header';\nimport { store } from './store';\n\nexport default function App() {\n  const [hideBtn, setHideBtn] = useState(false);\n\n  return (\n    <Provider store={store}>\n      <GlobalStyle />\n\n      <Header hideBtn={hideBtn} setHideBtn={setHideBtn} />\n\n      <PostList hideBtn={hideBtn} />\n    </Provider>\n  );\n}\n"],"sourceRoot":""}