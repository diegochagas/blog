{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","App.js","reducers/index.js","reducers/postsReducer.js","reducers/usersReducer.js","index.js"],"names":["jsonPlaceholder","axios","create","baseURL","fetchPosts","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","dispatch","response","wrap","_context2","prev","next","get","sent","type","payload","data","stop","_x3","apply","this","arguments","fetchUser","id","_ref3","_callee3","_context3","concat","_x4","UserHeader","user","props","react_default","createElement","className","name","React","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUsers","posts","map","post","key","title","body","components_UserHeader","renderList","_ref","_callee","getState","_context","_","chain","uniq","forEach","value","_x","_x2","App","src_components_PostList","combineReducers","length","undefined","action","toConsumableArray","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.fee24369.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst jsonPlaceholder = axios.create({\r\n  baseURL: 'https://jsonplaceholder.typicode.com'\r\n});\r\n\r\nexport default jsonPlaceholder;","import _ from 'lodash';\r\nimport jsonPlaceholder from '../apis/jsonPlaceholder';\r\n\r\nexport const FETCH_POSTS = 'FETCH_POSTS';\r\nexport const FETCH_USER = 'FETCH_USER';\r\n\r\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\r\n  await dispatch(fetchPosts());\r\n  _.chain(getState().posts)\r\n    .map('userId')\r\n    .uniq()\r\n    .forEach(id => dispatch(fetchUser(id)))\r\n    .value();\r\n}\r\n\r\nexport const fetchPosts = () => async dispatch => {\r\n  const response = await jsonPlaceholder.get(`/posts`);\r\n\tdispatch({ type: FETCH_POSTS, payload: response.data });\r\n}\r\n\r\nexport const fetchUser = id => async dispatch => {\r\n  const response = await jsonPlaceholder.get(`/users/${id}`);\r\n  dispatch({ type: FETCH_USER, payload: response.data });\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass UserHeader extends React.Component {\r\n  render(){\r\n    const { user } = this.props;\r\n    if(!user) {\r\n      return null;\r\n    }\r\n    return(\r\n      <div className=\"user-header\">\r\n        {user.name}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return { user: state.users.find(user => user.id === ownProps.userId) };\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserHeader);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { fetchPostsAndUsers } from '../actions';\r\nimport './PostList.css';\r\nimport UserHeader from './UserHeader';\r\n\r\nclass PostList extends Component {\r\n\tcomponentDidMount(){\r\n\t\tthis.props.fetchPostsAndUsers();\r\n\t}\r\n\r\n\trenderList(){\r\n\t\treturn this.props.posts.map(post => {\r\n\t\t\treturn(\r\n\t\t\t\t<li className=\"post-list-item\" key={post.id}>  \r\n\t\t\t\t\t<i className=\"fas fa-user\"></i>\r\n\t\t\t\t\t<div className=\"post-description\">\r\n\t\t\t\t\t\t<h2>{post.title}</h2>\r\n\t\t\t\t\t\t<p>{post.body}</p>\r\n\t\t\t\t\t\t<UserHeader userId={post.userId}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</li>\r\n\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n      <ul className=\"post-list\">\r\n        {this.renderList()}\r\n      </ul> \r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {posts: state.posts};\r\n}\r\n\r\nexport default connect(mapStateToProps, {fetchPostsAndUsers})(PostList);","import React, { Component } from 'react';\nimport './App.css';\nimport PostList from './components/PostList';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <PostList/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport postsReducer from './postsReducer';\r\nimport usersReducer from './usersReducer';\r\n\r\nexport default combineReducers({\r\n  posts: postsReducer,\r\n  users: usersReducer\r\n});\r\n","import { FETCH_POSTS } from \"../actions\";\r\n\r\nexport default (state = [], action) => {\r\n  switch(action.type){\r\n    case FETCH_POSTS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { FETCH_USER } from '../actions';\r\n\r\nexport default (state = [], action) => {\r\n  switch(action.type){\r\n    case FETCH_USER:\r\n      return [...state, action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './App';\nimport reducers from './reducers';\nimport './index.css';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \ndocument.getElementById('root'));"],"sourceRoot":""}