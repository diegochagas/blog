{"version":3,"sources":["assets/logo.svg","styles/global.js","components/PostList/styles.js","components/PostList/UserHeader/index.js","components/PostList/index.js","services/api.js","store/modules/user/actions.js","store/modules/posts/actions.js","components/Header/styles.js","components/Header/index.js","store/index.js","store/createStore.js","store/modules/rootReducer.js","store/modules/posts/reducer.js","store/modules/user/reducer.js","index.js","App.js"],"names":["module","exports","createGlobalStyle","Container","styled","ul","UserHeader","userId","user","useSelector","state","users","find","id","className","name","PostList","posts","map","post","key","title","body","api","axios","create","baseURL","fetchUser","dispatch","a","async","get","response","type","payload","data","fetchPostsAndUsers","getState","_","chain","uniq","forEach","value","header","Header","useState","hideBtn","setHideBtn","useDispatch","data-testid","src","logo","alt","data-test","onClick","store","reducers","middlewares","enhancer","applyMiddleware","createStore","combineReducers","action","thunk","ReactDOM","render","document","getElementById"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,kC,urBCI5BC,kBAAf,K,kYCFO,IAAMC,EAAYC,IAAOC,GAAV,KCGP,SAASC,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OAC7BC,EAAOC,aAAY,SAAAC,GAAK,OAC5BA,EAAMC,MAAMC,MAAK,SAAAJ,GAAI,OAAIA,EAAKK,KAAON,QAGvC,OAAKC,EAIE,yBAAKM,UAAU,eAAeN,EAAKO,MAHjC,KCLI,SAASC,IACtB,IAAMC,EAAQR,aAAY,SAAAC,GAAK,OAAIA,EAAMO,SAEzC,OACE,kBAACd,EAAD,KACGc,EAAMC,KAAI,SAAAC,GACT,OACE,wBAAIL,UAAU,iBAAiBM,IAAKD,EAAKN,IACvC,uBAAGC,UAAU,cAEb,yBAAKA,UAAU,oBACb,4BAAKK,EAAKE,OAEV,2BAAIF,EAAKG,MAET,kBAAChB,EAAD,CAAYC,OAAQY,EAAKZ,e,qDCfxBgB,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,yCCCEC,EAAY,SAAAd,GAAE,OAAI,SAAMe,GAAN,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACNN,EAAIQ,IAAJ,iBAAkBlB,KADZ,OACvBmB,EADuB,OAG7BJ,EAAS,CAAEK,KALa,aAKKC,QAASF,EAASG,OAHlB,uCCSlBC,EAAqB,kBAAM,SAAOR,EAAUS,GAAjB,SAAAR,EAAAC,OAAA,kEAAAD,EAAA,MAChCD,GAPwB,SAAMA,GAAN,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACPN,EAAIQ,IAAJ,WADO,OACxBC,EADwB,OAG9BJ,EAAS,CAAEK,KALc,cAKKC,QAASF,EAASG,OAHlB,yCAMQ,OAEtCG,IAAEC,MAAMF,IAAWpB,OAChBC,IAAI,UACJsB,OACAC,SAAQ,SAAA5B,GAAE,OAAIe,EAASD,EAAUd,OACjC6B,QANmC,uC,2VCXjC,IAAMvC,EAAYC,IAAOuC,OAAV,K,iBCKP,SAASC,IAAU,IAAD,EACDC,oBAAS,GADR,mBACxBC,EADwB,KACfC,EADe,KAGzBnB,EAAWoB,cAQjB,OACE,kBAAC,EAAD,CAAWC,cAAY,UACrB,yBAAKC,IAAKC,IAAMrC,UAAU,WAAWsC,IAAI,OAAOH,cAAY,SAE5D,qCAEA,yBAAKnC,UAAU,YAAYuC,YAAU,YACnC,uBAAGA,YAAU,QAAb,uCAGAP,GACA,4BAAQb,KAAK,SAASqB,QAjB5B,WACE1B,EAASQ,KAETW,GAAYD,KAcR,c,2BCrBFS,ECNS,SAACC,EAAUC,GACxB,IAAMC,EAAWC,IAAe,WAAf,cAAmBF,IAEpC,OAAOG,YAAYJ,EAAUE,GDGjBE,CEJCC,YAAgB,CAC7B5C,MCHa,WAAyB,IAAxBP,EAAuB,uDAAf,GAAIoD,EAAW,uCACrC,OAAQA,EAAO7B,MACb,INCuB,cMArB,OAAO6B,EAAO5B,QAChB,QACE,OAAOxB,IDDXC,MEJa,WAAyB,IAAxBD,EAAuB,uDAAf,GAAIoD,EAAW,uCACrC,OAAQA,EAAO7B,MACb,IRFsB,aQGpB,MAAM,GAAN,mBAAWvB,GAAX,CAAkBoD,EAAO5B,UAC3B,QACE,OAAOxB,MJDc,CAACqD,MKF5BC,IAASC,OAAO,mBCID,WACb,OACE,kBAAC,IAAD,CAAUV,MAAOA,GACf,kBAAC,EAAD,MAEA,kBAACX,EAAD,MAEA,kBAAC5B,EAAD,SDXU,MAASkD,SAASC,eAAe,W","file":"static/js/main.b95b4ba2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nimport './fonts.css';\r\n\r\nexport default createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n      sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n  code {\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n      monospace;\r\n  }\r\n\r\n  #root {\r\n    margin: 0 auto;\r\n    max-width: 1024px;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.ul`\r\n  margin: 20px;\r\n  padding: 0;\r\n\r\n  .post-list-item {\r\n    border: 1px solid black;\r\n    display: flex;\r\n    align-items: center;\r\n    list-style: none;\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n  }\r\n\r\n  .post-list-item .icon-user {\r\n    font-size: 50px;\r\n  }\r\n\r\n  .post-description {\r\n    margin-left: 20px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// import { Container } from './styles';\r\n\r\nexport default function UserHeader({ userId }) {\r\n  const user = useSelector(state =>\r\n    state.users.find(user => user.id === userId)\r\n  );\r\n\r\n  if (!user) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"user-header\">{user.name}</div>;\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Container } from './styles';\r\nimport UserHeader from './UserHeader';\r\n\r\nexport default function PostList() {\r\n  const posts = useSelector(state => state.posts);\r\n\r\n  return (\r\n    <Container>\r\n      {posts.map(post => {\r\n        return (\r\n          <li className=\"post-list-item\" key={post.id}>\r\n            <i className=\"icon-user\" />\r\n\r\n            <div className=\"post-description\">\r\n              <h2>{post.title}</h2>\r\n\r\n              <p>{post.body}</p>\r\n\r\n              <UserHeader userId={post.userId} />\r\n            </div>\r\n          </li>\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://jsonplaceholder.typicode.com',\r\n});\r\n\r\nexport default api;\r\n","import api from '../../../services/api';\r\n\r\nexport const FETCH_USER = 'FETCH_USER';\r\n\r\nexport const fetchUser = id => async dispatch => {\r\n  const response = await api.get(`/users/${id}`);\r\n\r\n  dispatch({ type: FETCH_USER, payload: response.data });\r\n};\r\n","import _ from 'lodash';\r\n\r\nimport { fetchUser } from '../user/actions';\r\nimport api from '../../../services/api';\r\n\r\nexport const FETCH_POSTS = 'FETCH_POSTS';\r\n\r\nexport const fetchPosts = () => async dispatch => {\r\n  const response = await api.get(`/posts`);\r\n\r\n  dispatch({ type: FETCH_POSTS, payload: response.data });\r\n};\r\n\r\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\r\n  await dispatch(fetchPosts());\r\n  _.chain(getState().posts)\r\n    .map('userId')\r\n    .uniq()\r\n    .forEach(id => dispatch(fetchUser(id)))\r\n    .value();\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.header`\r\n  display: block;\r\n  max-width: 980px;\r\n  margin: 20px auto;\r\n\r\n  img {\r\n    height: 70px;\r\n  }\r\n\r\n  button {\r\n    background-color: #2196f3;\r\n    border: 1px solid lightblue;\r\n    border-radius: 10px;\r\n    color: white;\r\n    font-weight: bold;\r\n    padding: 10px 20px;\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { fetchPostsAndUsers } from '~/store/modules/posts/actions';\r\nimport { Container } from './styles';\r\nimport logo from '~/assets/logo.svg';\r\n\r\nexport default function Header() {\r\n  const [hideBtn, setHideBtn] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  function handleClick() {\r\n    dispatch(fetchPostsAndUsers());\r\n\r\n    setHideBtn(!hideBtn);\r\n  }\r\n\r\n  return (\r\n    <Container data-testid=\"header\">\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" data-testid=\"logo\" />\r\n\r\n      <h1>Posts</h1>\r\n\r\n      <div className=\"head-line\" data-test=\"headline\">\r\n        <p data-test=\"desc\">Click the button to render posts!</p>\r\n      </div>\r\n\r\n      {!hideBtn && (\r\n        <button type=\"button\" onClick={handleClick}>\r\n          Get posts\r\n        </button>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import thunk from 'redux-thunk';\r\n\r\nimport createStore from './createStore';\r\n\r\nimport rootReducer from './modules/rootReducer';\r\n\r\nexport const middlewares = [thunk];\r\n\r\nconst store = createStore(rootReducer, middlewares);\r\n\r\nexport { store };\r\n","import { createStore, applyMiddleware } from 'redux';\r\n\r\nexport default (reducers, middlewares) => {\r\n  const enhancer = applyMiddleware(...middlewares);\r\n\r\n  return createStore(reducers, enhancer);\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport postsReducer from './posts/reducer';\r\nimport usersReducer from './user/reducer';\r\n\r\nexport default combineReducers({\r\n  posts: postsReducer,\r\n  users: usersReducer,\r\n});\r\n","import { FETCH_POSTS } from './actions';\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_POSTS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { FETCH_USER } from './actions';\r\n\r\nexport default (state = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_USER:\r\n      return [...state, action.payload];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport GlobalStyle from './styles/global';\r\nimport PostList from './components/PostList';\r\nimport Header from './components/Header';\r\nimport { store } from './store';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <GlobalStyle />\r\n\r\n      <Header />\r\n\r\n      <PostList />\r\n    </Provider>\r\n  );\r\n}\r\n"],"sourceRoot":""}